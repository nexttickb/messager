import Vue from 'vue'
import App from './App.vue'


Vue.config.productionTip = false

new Vue({
  render: h => h(App),
}).$mount('#app')


/*
2020-11-23 01:31:13
重改架构

消息改为主动推送和自己拉取两种。

分消息表和数据表

消息表  只存储消息类型  消息seq   消息id

消息体分别存储在不同的消息表中(聊天消息、通讯录)

------
#消息未读检测｛
	服务器读取一条最早的未读消息发送给客户端。//防止乱序
｝

当用户有新新消息时，消息携带消息体。

客户端联网后 触发 消息未读检测

客户端处理消息时根据消息体版本号做其他同步拉取操作，并且同步通知服务器消息已接收。

当服务器有新消息时异步通知客户端。客户端处理消息。

-------------------------------------------------------------
服务器端策略:
1、任何消息先写表。后触发消息未读检测。
2、app空闲一段时间后进行版本检测触发未读消息检测。避免有消息未成功到达客户端(断网、客户端收到消息后未处理成功意外退出)。


客户端：
1、逐条处理推送来的消息。处理完成后携带消息id通知服务器消息已读。


客户端数据存储于UI逻辑：

接收消息：
1、聊天消息
	为每个联系人创建消息队列
	


2、通讯录消息



3、系统消息




























*/